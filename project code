#BUS 462 Group Project - Codebase
#Team E.Kappa
#April 5, 2022


#Academic integrity pledge: We pledge on our honor that we have neither received nor given unauthorized assistance on this deliverable.

#Clearing mem buffers
cat("\014")  #Clear Console
rm(list = ls(all.names = TRUE))# clear all
gc()
set.seed(42) #Set a seed to ensure repeatable random samples

#Libraries
require(data.table)
require(pastecs)
require(stargazer)
require(PerformanceAnalytics)
require(corrplot)

data <- fread("/Users/aliciachow/Documents/4th Year/BUS 462/Datasets/credit_data.csv")
colSums(is.na(data))
data <- na.omit(data)

#Change data type of variables to integers
data$checking_status <- as.integer(factor(data$checking_status, levels = c("'<0'","'0<=X<200'","'>=200'","'no checking'")))
data$credit_history <- as.integer(factor(data$credit_history, levels = c("'critical/other existing credit'", "'existing paid'",  "'delayed previously'", "'no credits/all paid'" ,"'all paid'" )))
data$purpose <- as.integer(factor(data$purpose, levels = c("'domestic appliance'","radio/tv","furniture/equipment","repairs","'used car'","'new car'","education","business","retraining","other"))) #assuming the order goes from the cheapest purchase to the most expensive purchase.
data$savings_status<- as.integer(factor(data$savings_status, levels = c("'no known savings'", "'<100'","'500<=X<1000'","'>=1000'","'100<=X<500'")))
data$employment <- as.integer(factor(data$employment, levels = c("unemployed","'<1'","'1<=X<4'","'4<=X<7'","'>=7'")))
data$personal_status <- as.integer(factor(data$personal_status, levels = c("'male single'","'female div/dep/mar'","'male div/sep'","'male mar/wid'")))
data$other_parties <- as.integer(factor(data$other_parties, levels = c("none","guarantor","'co applicant'")))
data$property_magnitude <- as.integer(factor(data$property_magnitude, levels = c("'real estate'","'life insurance'","'no known property'","car")))
data$other_payment_plans<- as.integer(factor(data$other_payment_plans, levels = c("none", "bank","stores")))
data$housing<- as.integer(factor(data$housing, levels = c("own", "'for free'","rent")))
data$job<- as.integer(factor(data$job, levels = c("skilled", "'unskilled resident'","'high qualif/self emp/mgmt'","'unemp/unskilled non res'")))
data$own_telephone<- as.integer(factor(data$own_telephone, levels = c("none","yes")))
data$foreign_worker<- as.integer(factor(data$foreign_worker, levels = c("yes","no")))
data$class<- as.integer(factor(data$class, levels = c("good","bad")))

#Q1 - What variables should be focused on while evaluating credit amount?

#To get the correlation chart of all variables.
chart.Correlation(data, histogram=TRUE, pch=19)

# OLS model 
m.OLS<-lm(credit_amount ~ ., data=data)

# Looking at the summary results from the OLS regression model
summary(m.OLS)
AIC(m.OLS)
stargazer(m.OLS,type="text")

#Stepwise Regression
model.step.OLS <- step(m.OLS) 

# Looking at the summary results from the Stepwise regression 
stargazer(m.OLS,model.step.OLS,type="text")
summary(model.step.OLS)
AIC(model.step.OLS)

#Q2 - How does the scale of purchases affect one’s credit amount? That is, are individuals more likely to pay off their credit or less likely when purchasing larger items (which may take longer to pay off)?
#Dependent Variable: Credit Amount
#Independent Variables: Purpose, Credit History, Duration, Property Magnitude, Housing, Telephone (assuming it is similar to a mobile device and will be quite expensive)

# Begin by subsetting our data with only the relevant variables (dependent and independent variables)
dataq2<-subset(data,select=c(purpose, credit_history,duration,property_magnitude,housing,own_telephone,credit_amount))

# Run a descriptive statistics on our new subset
stat.desc(dataq2)

#To get the correlation chart of all variables.
chart.Correlation(dataq2, histogram=TRUE, pch=19)

# We can also visualize the correlations utilizing a correlogram
cor_data<-cor(dataq2)
corrplot(cor_data, method="number", "upper")

# To analyze the data and answer our question, run the OLS model with all independent variables mentioned above
OLSModel1 <- lm(credit_amount ~ purpose + credit_history + duration + property_magnitude + housing + own_telephone, data=dataq2)

# Let's look at the summary results from the OLS regression model
summary(OLSModel1)
stargazer(OLSModel1,type="text")
AIC(OLSModel1)

# Visualize the relationship between the amount of credit an individual has/duration and the various purchasing habits (purpose)
plot(dataq2$purpose, dataq2$credit_amount, main="Purpose vs. Credit Amount", xlab = "Purpose", ylab = "Credit Amount")
plot(dataq2$purpose, dataq2$duration, main="Purpose vs. Duration", xlab = "Purpose", ylab = "Duration")
plot(dataq2$duration, dataq2$credit_amount, main="Duration vs. Credit Amount", xlab = "Duration", ylab = "Credit Amount")

# Based on the first OLS Model, duration is the most significant variable when analyzing one's credit amount
# For our question, we want to analyze how purchases impact an individual's credit amount, and whether duration plays a factor in this 
# We should find the interactions between duration and purpose, and duration and owning a phone. 


# Create a variable that considers the interaction between purpose and duration
purpose_duration <- (dataq2$purpose*dataq2$duration)

#Create a variable that considers the interaction between own_telephone and duration
telephone_duration <- (dataq2$own_telephone*dataq2$duration)

#Now create an OLS model that considers BOTH these interactions to see which best explains credit amounts
OLSModel2 <- lm(credit_amount ~ property_magnitude + housing + purpose_duration + telephone_duration, data=dataq2)
OLSModel2

summary(OLSModel2)
stargazer(OLSModel2, type="text")
AIC(OLSModel2)

stargazer(OLSModel1, OLSModel2, type="text")


# While housing has a high co-efficient and has a low correlation with duration and credit amount, our independent variable
cor(dataq2$credit_history,dataq2$duration)
cor(dataq2$credit_amount,dataq2$housing)

# Hypothetically, if we ran an OLS regression using housing
housing_duration<-(dataq2$housing*dataq2$duration)
OLSModel3 <- lm(credit_amount ~ property_magnitude + housing_duration + purpose + own_telephone + credit_history, data=dataq2)
OLSModel3
summary(OLSModel3)
stargazer(OLSModel3, type="text")

# The adjusted r-squared value is ~0.3 which is fairly low compared to the other models. 
stargazer(OLSModel1, OLSModel2, OLSModel3, type="text")


#Q3 - Given the loan/customer features, we want to predict the default on loans.
head(data)
tail(data)

#Convert remaining data types
data$personal_status <- as.integer(factor(data$personal_status, levels = c("'female div/dep/mar'","'male div/sep'","'male mar/wid'","	
'male single'")))
data$other_parties <- as.integer(factor(data$other_parties, levels = c("none","guarantor","co applicant")))
data$other_payment_plans <- as.integer(factor(data$other_payment_plans, levels = c("none","bank","stores")))
data$job <- as.integer(factor(data$job, levels = c("skilled","‘unskilled resident’","‘high qualif/self emp/mgmt’","‘unemp/unskilled non res'")))
data$foreign_worker <- as.integer(factor(data$foreign_worker, levels = c("yes","no")))
data$employment <- as.integer(factor(data$employment, levels = c("'<1'","'>=7'","'1<=X<4'","unemployed")))

#Subset data
dataq3 <- data[,c("purpose","other_parties","installment_commitment","property_magnitude", "existing_credits", "num_dependents", "personal_status", "employment", "residence_since", "age", "housing", "job", "own_telephone", "foreign_worker", "other_payment_plans")]
dataframeq3 <- data.frame(dataq3)

#Stats summary
stat.desc(dataq3)
stargazer(dataq3,type="text")

#Correlation
chart.Correlation(dataq3)

#Shuffle data
shuffle_index <- sample(1:nrow(dataq3))
dataq3 <- dataq3[shuffle_index,]

#Create test and train data
#Top 80% for train and bottom 20% for test
n_cut <- round(nrow(dataq3)*.8,0) # row at which to cut data
dataq3_train <- dataq3[1:n_cut] # create training data subset
dataq3_test <- dataq3[(n_cut+1):nrow(dataq3)] # create test data subset

#Check dim
dim(dataq3_train)
dim(dataq3_test)

#Test distribution
#prop.table(table(dataq3_train$))
#prop.table(table(data_testq3$))

##Classifying data
data$BAD = ifelse(df$class=='bad', 1, 0)

data[, c('class', 'BAD')]

sapply(data, class)

categorical_vars = c('checking_status', 'credit_history', 'purpose', 'savings_status', 'employment', 'personal_status', 'residence_since', 'property_magnitude', 'housing', 'job', 'foreign_worker')

df = dummy_cols(data, select_columns = categorical_vars)

df= select(df,-class, -own_telephone, -other_parties, -other_payment_plans,-checking_status, -purpose, -savings_status, -employment, -personal_status, -residence_since, -property_magnitude, -housing, -job, foreign_worker)

length(colnames(df))

sum(df$BAD == 1)
sum(df$BAD == 0)

install.packages('caret')
library(caret)

train_idx = createDataPartition(df$BAD, p = 0.85, list = FALSE)


df_train = df[train_idx,]
df_test = df[-train_idx,]

##Running logit
logit <- glm(BAD ~.-1, data = df_train, family = binomial(link = 'logit'))
logit

glm_probs = predict(logit, newdata = df_test, type = 'response', se.fit = TRUE)

predictions = ifelse(glm_probs$fit >= 0.5, 1, 0)

accuracy = sum(df_test$BAD == predictions)/length(predictions)

